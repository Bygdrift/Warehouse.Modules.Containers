{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.18.4.5664",
      "templateHash": "2938309899113055301"
    }
  },
  "parameters": {
    "ModuleName": {
      "type": "string",
      "defaultValue": "Containers",
      "metadata": {
        "description": "The name of the module. Only use between 3-24 letters or numers, or the Warehouse will not work. The functionApp gets the same name followed by the \"-resourceGroup.id\". The modulename is hard to change later, so try to keep it static. It is used in dataLake and databse as an identifier of data that comes from this app"
      },
      "maxLength": 24,
      "minLength": 3
    },
    "containerOperatingSystem": {
      "type": "string",
      "defaultValue": "Linux",
      "metadata": {
        "description": "Operating system"
      },
      "allowedValues": [
        "Linux",
        "Windows"
      ]
    },
    "container1Name": {
      "type": "string",
      "defaultValue": "container1",
      "metadata": {
        "description": "The name of the container. The container must contain only lowercase letters, numbers, and dashes. It cannot start or end with a dash and consecutive dashes are not allowed."
      },
      "maxLength": 63,
      "minLength": 1
    },
    "container1Image": {
      "type": "string",
      "defaultValue": "bygdrift/consoleappcontainerv1",
      "metadata": {
        "description": "Image fra Docker hub like: bygdrift/consoleappcontainerv1"
      },
      "minLength": 1
    },
    "container1Variables": {
      "type": "string",
      "defaultValue": "[[{Var1:'Jon'}]",
      "metadata": {
        "description": "Variables as jArray like: [{Var1:'Jon'}, {variable:'Doe'}]"
      }
    },
    "container2Name": {
      "type": "string",
      "metadata": {
        "description": "The name of the container. Leave it blank if you only have one container. The container must contain only lowercase letters, numbers, and dashes. It cannot start or end with a dash and consecutive dashes are not allowed."
      },
      "maxLength": 63
    },
    "container2Image": {
      "type": "string",
      "metadata": {
        "description": "Image fra Docker hub like: bygdrift/consoleappcontainerv1"
      }
    },
    "container2Variables": {
      "type": "string",
      "metadata": {
        "description": "Variables as jArray like: [{Var1:'Jon'}, {variable:'Doe'}]"
      }
    },
    "container3Name": {
      "type": "string",
      "metadata": {
        "description": "The name of the container. Leave it blank if you only have one container. The container must contain only lowercase letters, numbers, and dashes. It cannot start or end with a dash and consecutive dashes are not allowed."
      },
      "maxLength": 63
    },
    "container3Image": {
      "type": "string",
      "metadata": {
        "description": "Image fra Docker hub like: bygdrift/consoleappcontainerv1"
      }
    },
    "container3Variables": {
      "type": "string",
      "metadata": {
        "description": "Variables as jArray like: [{Var1:'Jon'}, {variable:'Doe'}]"
      }
    },
    "scheduleExpression": {
      "type": "string",
      "defaultValue": "0 0 1 * * *",
      "metadata": {
        "description": "Schedule"
      }
    },
    "timeZoneId": {
      "type": "string",
      "defaultValue": "Romance Standard Time",
      "metadata": {
        "description": "\"Romance Standard Time\" is Copenhagen. For other timezones, find them here: https://raw.githubusercontent.com/Bygdrift/Warehouse/master/Docs/TimeZoneIds.csv"
      }
    },
    "CultureName": {
      "type": "string",
      "defaultValue": "da-DK",
      "metadata": {
        "description": "\"da-DK\" is Denmark."
      }
    }
  },
  "variables": {
    "functionAppName": "[format('{0}-{1}', parameters('ModuleName'), uniqueString(resourceGroup().id))]",
    "contributorRoleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2020-10-01",
      "name": "[format('windows-{0}', uniqueString(resourceGroup().id))]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[variables('functionAppName')]",
      "kind": "functionapp",
      "location": "[resourceGroup().location]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('windows-{0}', uniqueString(resourceGroup().id)))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', 'applicationInsights'), '2020-02-02-preview').InstrumentationKey]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', format('appstorage{0}', uniqueString(resourceGroup().id)), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', format('appstorage{0}', uniqueString(resourceGroup().id))), '2019-06-01').keys[0].value)]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet"
            },
            {
              "name": "HostName",
              "value": "[format('{0}.azurewebsites.net', variables('functionAppName'))]"
            },
            {
              "name": "ModuleName",
              "value": "[parameters('ModuleName')]"
            },
            {
              "name": "ContainerOperatingSystem",
              "value": "[parameters('containerOperatingSystem')]"
            },
            {
              "name": "Container1Name",
              "value": "[trim(toLower(parameters('container1Name')))]"
            },
            {
              "name": "Container1Image",
              "value": "[parameters('container1Image')]"
            },
            {
              "name": "Container1Variables",
              "value": "[parameters('container1Variables')]"
            },
            {
              "name": "Container2Name",
              "value": "[trim(toLower(parameters('container2Name')))]"
            },
            {
              "name": "Container2Image",
              "value": "[parameters('container2Image')]"
            },
            {
              "name": "Container2Variables",
              "value": "[parameters('container2Variables')]"
            },
            {
              "name": "Container3Name",
              "value": "[trim(toLower(parameters('container3Name')))]"
            },
            {
              "name": "Container3Image",
              "value": "[parameters('container3Image')]"
            },
            {
              "name": "Container3Variables",
              "value": "[parameters('container3Variables')]"
            },
            {
              "name": "TimeZoneId",
              "value": "[parameters('timeZoneId')]"
            },
            {
              "name": "CultureName",
              "value": "[parameters('CultureName')]"
            },
            {
              "name": "ResourceGroup",
              "value": "[resourceGroup().name]"
            },
            {
              "name": "ScheduleExpression",
              "value": "[parameters('scheduleExpression')]"
            },
            {
              "name": "VaultUri",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', format('keyvault-{0}', uniqueString(resourceGroup().id))), '2019-09-01').vaultUri]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', format('appstorage{0}', uniqueString(resourceGroup().id)), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', format('appstorage{0}', uniqueString(resourceGroup().id))), '2019-06-01').keys[0].value)]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', format('windows-{0}', uniqueString(resourceGroup().id)))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/sourcecontrols",
      "apiVersion": "2021-01-01",
      "name": "[format('{0}/web', variables('functionAppName'))]",
      "properties": {
        "repoUrl": "https://github.com/Bygdrift/Warehouse.Modules.Containers",
        "branch": "master",
        "isManualIntegration": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/accessPolicies",
      "apiVersion": "2021-06-01-preview",
      "name": "[format('{0}/add', format('keyvault-{0}', uniqueString(resourceGroup().id)))]",
      "properties": {
        "accessPolicies": [
          {
            "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName')), '2021-02-01', 'full').identity.principalId]",
            "permissions": {
              "secrets": [
                "get",
                "list",
                "set",
                "delete"
              ]
            },
            "tenantId": "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName')), '2021-02-01', 'full').identity.tenantId]"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(resourceGroup().id, parameters('ModuleName'), variables('contributorRoleDefinitionId'), 'ServicePrincipal')]",
      "properties": {
        "roleDefinitionId": "[variables('contributorRoleDefinitionId')]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName')), '2021-02-01', 'full').identity.principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
      ]
    }
  ],
  "outputs": {
    "functionAppName": {
      "type": "string",
      "value": "[variables('functionAppName')]"
    }
  }
}